{"version":3,"sources":["angular2-sentio/components/donut-chart.directive.ts"],"names":[],"mappings":"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","file":"donut-chart.directive.js","sourcesContent":["import { Directive, ElementRef, HostListener, Input, OnChanges, SimpleChange } from '@angular/core';\nimport * as sentio from '@asymmetrik/sentio';\n\nimport { BaseChartDirective } from './base-chart.directive';\n\n\n@Directive({\n\tselector: 'donut-chart'\n})\nexport class DonutChartDirective\n\textends BaseChartDirective\n\timplements OnChanges {\n\n\t@Input() model: Object[];\n\t@Input() colorScale: any;\n\n\t@Input('resize') resizeChart: boolean;\n\t@Input() duration: number;\n\n\t@Input('configure') configureFn: (chart: any) => void;\n\n\tconstructor(el: ElementRef) {\n\t\tsuper(el, sentio.chart.donut());\n\t}\n\n\t/**\n\t * For the donut chart, we pin the height to the width\n\t * to keep the aspect ratio correct\n\t */\n\tsetChartDimensions(width: number, height: number, force: boolean = false): void {\n\t\tif ((force || this.resizeChart) && null != this.chart.width) {\n\t\t\tif (null != width && this.chart.width() !== width) {\n\t\t\t\t// pin the height to the width\n\t\t\t\tthis.chart\n\t\t\t\t\t.width(width)\n\t\t\t\t\t.height(width)\n\t\t\t\t\t.resize().redraw();\n\t\t\t}\n\t\t}\n\t}\n\n\t@HostListener('window:resize', ['$event'])\n\tonResize(event: any) {\n\t\tif (this.resizeChart) {\n\t\t\tthis.delayResize();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tif (this.resizeChart) {\n\t\t\tthis.resize();\n\t\t}\n\t}\n\n\tngOnChanges(changes: { [key: string]: SimpleChange }) {\n\t\tlet redraw: boolean = false;\n\n\t\t// Call the configure function\n\t\tif (changes['configureFn'] && changes['configureFn'].isFirstChange()\n\t\t\t\t&& null != changes['configureFn'].currentValue) {\n\t\t\tthis.configureFn(this.chart);\n\t\t}\n\n\t\tif (changes['model']) {\n\t\t\tthis.chart.data(changes['model'].currentValue);\n\t\t\tredraw = true;\n\t\t}\n\t\tif (changes['duration']) {\n\t\t\tthis.chart.duration(changes['duration'].currentValue);\n\t\t}\n\t\tif (changes['colorScale']) {\n\t\t\tthis.chart.color(changes['colorScale'].currentValue);\n\t\t\tredraw = true;\n\t\t}\n\n\t\t// Only redraw once if possible\n\t\tif (redraw) {\n\t\t\tthis.chart.redraw();\n\t\t}\n\t}\n\n}\n"]}