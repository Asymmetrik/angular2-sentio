{"version":3,"sources":["../../src/components/timeline-line.directive.ts"],"names":[],"mappings":"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","file":"timeline-line.directive.js","sourcesContent":["import { Directive, ElementRef, EventEmitter, HostListener, Input, OnChanges, SimpleChange, Output } from '@angular/core';\nimport * as sentio from '@asymmetrik/sentio';\n\nimport { BaseChartDirective } from './base-chart.directive';\n\n\n@Directive({\n\tselector: 'timeline-line'\n})\nexport class TimelineLineDirective\n\textends BaseChartDirective\n\timplements OnChanges {\n\n\t@Input() model: Object[];\n\t@Input() markers: Object[];\n\t@Input() yExtent: Object[];\n\t@Input() xExtent: Object[];\n\n\t@Input() resizeWidth: boolean;\n\t@Input() resizeHeight: boolean;\n\t@Input() duration: number;\n\n\t@Input('configure') configureFn: (chart: any) => void;\n\n\t@Input() filterEnabled: boolean;\n\t@Input('filter') filterState: Object[];\n\t@Output() filterChange: EventEmitter<Object[]> = new EventEmitter<Object[]>();\n\n\t@Output() markerOver: EventEmitter<Object> = new EventEmitter<Object>();\n\t@Output() markerOut: EventEmitter<Object> = new EventEmitter<Object>();\n\t@Output() markerClick: EventEmitter<Object> = new EventEmitter<Object>();\n\n\tconstructor(el: ElementRef) {\n\t\tsuper(el, sentio.timeline.line());\n\t}\n\n\t/**\n\t * For the timeline, both dimensions scale independently\n\t */\n\tsetChartDimensions(width: number, height: number, force: boolean = false): void {\n\t\tlet redraw: boolean = false;\n\n\t\tif ((force || this.resizeWidth) && null != this.chart.width) {\n\t\t\tif (null != width && this.chart.width() !== width) {\n\t\t\t\tthis.chart.width(width);\n\t\t\t\tredraw = true;\n\t\t\t}\n\t\t}\n\n\t\tif ((force || this.resizeHeight) && null != this.chart.height) {\n\t\t\tif (null != height && this.chart.height() !== height) {\n\t\t\t\tthis.chart.height(height);\n\t\t\t\tredraw = true;\n\t\t\t}\n\t\t}\n\n\t\tif (redraw) {\n\t\t\tthis.chart.resize().redraw();\n\t\t}\n\t}\n\n\t/**\n\t * Did the state of the filter change?\n\t */\n\tdidFilterChange = (current: Object[], previous: Object[]) => {\n\n\t\t// Deep compare the filter\n\t\tif (current === previous ||\n\t\t\t(null != current && null != previous\n\t\t\t&& current.length === previous.length\n\t\t\t&& current[0] === previous[0]\n\t\t\t&& current[1] === previous[1]\n\t\t\t&& current[2] === previous[2])) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// We know it changed\n\t\treturn true;\n\t}\n\n\t@HostListener('window:resize', ['$event'])\n\tonResize(event) {\n\t\tif (this.resizeHeight || this.resizeWidth) {\n\t\t\tthis.delayResize();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\t// Do the initial resize if either dimension is supposed to resize\n\t\tif (this.resizeHeight || this.resizeWidth) {\n\t\t\tthis.resize();\n\t\t}\n\n\t\t// register for the filter end event\n\t\tthis.chart.dispatch().on('filterend', (fs) => {\n\n\t\t\t// We are externally representing the filter as undefined or a two element array\n\t\t\t// So, convert the filter state to the two value format\n\t\t\tif (null == fs || (fs.length > 0 && fs[0])) {\n\t\t\t\tfs = undefined;\n\t\t\t}\n\t\t\telse if (fs.length > 2) {\n\t\t\t\tfs = fs.slice(1, 3);\n\t\t\t}\n\t\t\telse if (fs.length !== 2) {\n\t\t\t\tfs = undefined;\n\t\t\t}\n\n\t\t\t// If the filter actually changed, emit the event\n\t\t\tif (this.didFilterChange(fs, this.filterState)) {\n\t\t\t\tsetTimeout(() => { this.filterChange.emit(fs); });\n\t\t\t}\n\t\t});\n\n\t\t// register for the marker events\n\t\tthis.chart.dispatch().on('markerMouseover', (p) => { this.markerClick.emit(p); });\n\t\tthis.chart.dispatch().on('markerMouseout', (p) => { this.markerOver.emit(p); });\n\t\tthis.chart.dispatch().on('markerClick', (p) => { this.markerOut.emit(p); });\n\n\t}\n\n\tngOnChanges(changes: { [key: string]: SimpleChange }) {\n\n\t\tlet redraw: boolean = false;\n\n\t\t// Call the configure function\n\t\tif (changes['configureFn'] && changes['configureFn'].isFirstChange()\n\t\t\t\t&& null != changes['configureFn'].currentValue) {\n\t\t\tthis.configureFn(this.chart);\n\t\t}\n\n\t\tif (changes['model']) {\n\t\t\tthis.chart.data(changes['model'].currentValue);\n\t\t\tredraw = true;\n\t\t}\n\t\tif (changes['yExtent']) {\n\t\t\tthis.chart.yExtent().overrideValue(changes['yExtent'].currentValue);\n\t\t\tredraw = true;\n\t\t}\n\t\tif (changes['xExtent']) {\n\t\t\tthis.chart.xExtent().overrideValue(changes['xExtent'].currentValue);\n\t\t\tredraw = true;\n\t\t}\n\t\tif (changes['duration']) {\n\t\t\tthis.chart.duration(changes['duration'].currentValue);\n\t\t}\n\n\t\tif (changes['filterEnabled']) {\n\t\t\tthis.chart.filter(changes['filterEnabled'].currentValue);\n\t\t\tredraw = true;\n\t\t}\n\t\tif (changes['filterState']) {\n\n\t\t\t// Only do anything if the filter is changing\n\t\t\tif (changes['filterState'].isFirstChange()\n\t\t\t\t|| this.didFilterChange(changes['filterState'].currentValue, changes['filterState'].previousValue)) {\n\t\t\t\tthis.chart.setFilter(changes['filterState'].currentValue);\n\t\t\t\tredraw = true;\n\t\t\t}\n\n\t\t}\n\n\t\tif (changes['markers']) {\n\t\t\tthis.chart.markers(changes['markers'].currentValue);\n\t\t\tredraw = true;\n\t\t}\n\n\t\tif (redraw) {\n\t\t\tthis.chart.redraw();\n\t\t}\n\t}\n\n}\n"]}