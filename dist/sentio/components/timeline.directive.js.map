{"version":3,"sources":["sentio/components/timeline.directive.ts"],"names":[],"mappings":"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","file":"timeline.directive.js","sourcesContent":["import { Directive, ElementRef, EventEmitter, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\nimport * as sentio from '@asymmetrik/sentio';\n\nimport { ChartWrapper } from '../util/chart-wrapper.util';\nimport { ResizeDimension, ResizeUtil } from '../util/resize.util';\n\n\n@Directive({\n\tselector: 'sentioTimeline'\n})\nexport class TimelineDirective\n\timplements OnChanges, OnDestroy, OnInit {\n\n\t@Input() model: any[];\n\t@Input() markers: any[];\n\n\t@Input() yExtent: [ number, number ];\n\t@Input() xExtent: [ number, number ];\n\n\t@Input() resizeWidth: boolean;\n\t@Input() resizeHeight: boolean;\n\n\t// Chart Ready event\n\t@Output() chartReady = new EventEmitter<sentio.chart.TimelineChart>();\n\n\t// Timeline filter/brush support\n\t@Input() filterEnabled: boolean;\n\t@Input('filter') filterState: [number, number] | null;\n\t@Output() filterChange = new EventEmitter<[number, number] | null>();\n\n\t// Interaction events\n\t@Output() markerOver: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() markerOut: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() markerClick: EventEmitter<any> = new EventEmitter<any>();\n\n\tchartWrapper: ChartWrapper<sentio.chart.TimelineChart>;\n\tresizeUtil: ResizeUtil;\n\n\tconstructor(el: ElementRef) {\n\n\t\t// Create the chart\n\t\tthis.chartWrapper = new ChartWrapper<sentio.chart.TimelineChart>(el, sentio.chart.timeline(), this.chartReady);\n\n\t\t// Set up the resizer\n\t\tthis.resizeUtil = new ResizeUtil(el, (this.resizeHeight || this.resizeWidth));\n\n\t}\n\n\t/**\n\t * For the timeline, both dimensions scale independently\n\t */\n\tsetChartDimensions(dim: ResizeDimension): void {\n\n\t\tlet resize = false;\n\n\t\tif (null != dim.width && this.chartWrapper.chart.width() !== dim.width) {\n\n\t\t\t// pin the height to the width\n\t\t\tthis.chartWrapper.chart\n\t\t\t\t.width(dim.width);\n\t\t\tresize = true;\n\n\t\t}\n\n\t\tif (null != dim.height && this.chartWrapper.chart.height() !== dim.height) {\n\n\t\t\t// pin the height to the width\n\t\t\tthis.chartWrapper.chart\n\t\t\t\t.height(dim.height);\n\t\t\tresize = true;\n\n\t\t}\n\n\t\tif (resize) {\n\t\t\tthis.chartWrapper.chart.resize();\n\t\t}\n\t}\n\n\t/**\n\t * Did the state of the filter change?\n\t */\n\tdidFilterChange = (current: [ number, number ] | null, previous: [ number, number ] | null) => {\n\n\t\t// Deep compare the filter\n\t\tif (current === previous ||\n\t\t\t(null != current && null != previous\n\t\t\t&& current[0] === previous[0]\n\t\t\t&& current[1] === previous[1])) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// We know it changed\n\t\treturn true;\n\t}\n\n\t@HostListener('window:resize', ['$event'])\n\tonResize(event: any) {\n\t\tthis.resizeUtil.resizeObserver.next(event);\n\t}\n\n\tngOnInit() {\n\n\t\t// Initialize the chart\n\t\tthis.chartWrapper.initialize();\n\n\t\t// register for the marker events\n\t\tthis.chartWrapper.chart.dispatch().on('markerClick', (p: any) => { this.markerClick.emit(p); });\n\t\tthis.chartWrapper.chart.dispatch().on('markerMouseover', (p: any) => { this.markerOver.emit(p); });\n\t\tthis.chartWrapper.chart.dispatch().on('markerMouseout', (p: any) => { this.markerOut.emit(p); });\n\n\t\t// register for the filter end event\n\t\tthis.chartWrapper.chart.dispatch().on('filterend', (fs: [ number, number ] | null) => {\n\t\t\t// If the filter actually changed, emit the event\n\t\t\tif (this.didFilterChange(fs, this.filterState)) {\n\t\t\t\tsetTimeout(() => { this.filterChange.emit(fs); });\n\t\t\t}\n\t\t});\n\n\t\t// Set up the resize callback\n\t\tthis.resizeUtil.resizeSource\n\t\t\t.subscribe(() => {\n\n\t\t\t\t// Do the resize operation\n\t\t\t\tthis.setChartDimensions(this.resizeUtil.getSize());\n\t\t\t\tthis.chartWrapper.chart.redraw();\n\n\t\t\t});\n\n\t\t// Set the initial size of the chart\n\t\tthis.setChartDimensions(this.resizeUtil.getSize());\n\t\tthis.chartWrapper.chart.redraw();\n\n\t\t// Set the filter (if it exists)\n\t\tif (null != this.filterState) {\n\t\t\tthis.chartWrapper.chart.setFilter(this.filterState);\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.resizeUtil.destroy();\n\t}\n\n\tngOnChanges(changes: { [key: string]: SimpleChange }) {\n\n\t\tlet resize: boolean = false;\n\t\tlet redraw: boolean = false;\n\n\t\tif (changes['model']) {\n\t\t\tthis.chartWrapper.chart.data(this.model);\n\t\t\tredraw = redraw || !changes['model'].isFirstChange();\n\t\t}\n\t\tif (changes['markers']) {\n\t\t\tthis.chartWrapper.chart.markers(this.markers);\n\t\t\tredraw = redraw || !changes['markers'].isFirstChange();\n\t\t}\n\n\t\tif (changes['yExtent']) {\n\t\t\tthis.chartWrapper.chart.yExtent().overrideValue(this.yExtent);\n\t\t\tredraw = redraw || !changes['yExtent'].isFirstChange();\n\t\t}\n\t\tif (changes['xExtent']) {\n\t\t\tthis.chartWrapper.chart.xExtent().overrideValue(this.xExtent);\n\t\t\tredraw = redraw || !changes['xExtent'].isFirstChange();\n\t\t}\n\n\t\tif (changes['filterEnabled']) {\n\t\t\tthis.chartWrapper.chart.filter(this.filterEnabled);\n\t\t\tredraw = redraw || !changes['filterEnabled'].isFirstChange();\n\t\t}\n\t\tif (changes['filterState'] && !changes['filterState'].isFirstChange()) {\n\n\t\t\t// Only apply it if it actually changed\n\t\t\tif (this.didFilterChange(changes['filterState'].currentValue, changes['filterState'].previousValue)) {\n\n\t\t\t\tthis.chartWrapper.chart.setFilter(this.filterState);\n\t\t\t\tredraw = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Only redraw once if necessary\n\t\tif (resize) {\n\t\t\tthis.chartWrapper.chart.resize();\n\t\t}\n\t\tif (redraw) {\n\t\t\tthis.chartWrapper.chart.redraw();\n\t\t}\n\t}\n\n}\n"]}