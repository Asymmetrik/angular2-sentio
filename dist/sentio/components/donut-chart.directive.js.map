{"version":3,"sources":["sentio/components/donut-chart.directive.ts"],"names":[],"mappings":"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","file":"donut-chart.directive.js","sourcesContent":["import { Directive, ElementRef, EventEmitter, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\nimport * as sentio from '@asymmetrik/sentio';\n\nimport { ChartWrapper } from '../util/chart-wrapper.util';\nimport { ResizeDimension, ResizeUtil } from '../util/resize.util';\n\n\n@Directive({\n\tselector: 'sentioDonutChart'\n})\nexport class DonutChartDirective\n\timplements OnChanges, OnDestroy, OnInit {\n\n\t@Input() model: any[];\n\t@Input() colorScale: any;\n\n\t@Input('resize') resizeEnabled: boolean;\n\t@Input() duration: number;\n\n\t// Chart Ready event\n\t@Output() chartReady = new EventEmitter<sentio.chart.DonutChart>();\n\n\tchartWrapper: ChartWrapper<sentio.chart.DonutChart>;\n\tresizeUtil: ResizeUtil;\n\n\tconstructor(el: ElementRef) {\n\n\t\t// Create the chart\n\t\tthis.chartWrapper = new ChartWrapper<sentio.chart.DonutChart>(el, sentio.chart.donut(), this.chartReady);\n\n\t\t// Set up the resizer\n\t\tthis.resizeUtil = new ResizeUtil(el, this.resizeEnabled);\n\n\t}\n\n\n\t/**\n\t * For the donut chart, we pin the height to the width\n\t * to keep the aspect ratio correct\n\t */\n\tsetChartDimensions(dim: ResizeDimension): void {\n\n\t\tif (null != dim.width && this.chartWrapper.chart.width() !== dim.width) {\n\n\t\t\t// pin the height to the width\n\t\t\tthis.chartWrapper.chart\n\t\t\t\t.width(dim.width)\n\t\t\t\t.height(dim.width)\n\t\t\t\t.resize();\n\t\t}\n\n\t}\n\n\t@HostListener('window:resize', ['$event'])\n\tonResize(event: any) {\n\t\tthis.resizeUtil.resizeObserver.next(event);\n\t}\n\n\tngOnInit() {\n\n\t\t// Initialize the chart\n\t\tthis.chartWrapper.initialize();\n\n\t\t// Set up the resize callback\n\t\tthis.resizeUtil.resizeSource\n\t\t\t.subscribe(() => {\n\n\t\t\t\t// Do the resize operation\n\t\t\t\tthis.setChartDimensions(this.resizeUtil.getSize());\n\t\t\t\tthis.chartWrapper.chart.redraw();\n\n\t\t\t});\n\n\t\t// Set the initial size of the chart\n\t\tthis.setChartDimensions(this.resizeUtil.getSize());\n\t\tthis.chartWrapper.chart.redraw();\n\n\t}\n\n\tngOnDestroy() {\n\t\tthis.resizeUtil.destroy();\n\t}\n\n\tngOnChanges(changes: { [key: string]: SimpleChange }) {\n\t\tlet resize: boolean = false;\n\t\tlet redraw: boolean = false;\n\n\t\tif (changes['model']) {\n\t\t\tthis.chartWrapper.chart.data(this.model);\n\t\t\tredraw = redraw || !changes['model'].isFirstChange();\n\t\t}\n\n\t\tif (changes['duration']) {\n\t\t\tthis.chartWrapper.chart.duration(this.duration);\n\t\t}\n\t\tif (changes['colorScale']) {\n\t\t\tthis.chartWrapper.chart.colorScale(this.colorScale);\n\t\t\tredraw = redraw || !changes['colorScale'].isFirstChange();\n\t\t}\n\t\tif (changes['resize']) {\n\t\t\tthis.resizeUtil.enabled = this.resizeEnabled;\n\n\t\t\tresize = resize || (this.resizeEnabled && !changes['resize'].isFirstChange());\n\t\t\tredraw = redraw || resize;\n\t\t}\n\n\t\t// Only redraw once if necessary\n\t\tif (resize) {\n\t\t\tthis.chartWrapper.chart.resize();\n\t\t}\n\t\tif (redraw) {\n\t\t\tthis.chartWrapper.chart.redraw();\n\t\t}\n\t}\n\n}\n"]}