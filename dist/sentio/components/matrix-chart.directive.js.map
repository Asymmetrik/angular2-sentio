{"version":3,"sources":["sentio/components/matrix-chart.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,KAAK,EAAgC,MAAM,EAAgB,MAAM,eAAe,CAAC;AAC/H,OAAO,KAAK,MAAM,MAAM,oBAAoB,CAAC;AAE7C,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAM1D,IAAa,oBAAoB;IAWhC,8BAAY,EAAc;QAL1B,oBAAoB;QACV,eAAU,GAAG,IAAI,YAAY,EAA4B,CAAC;QAMnE,mBAAmB;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAA2B,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAE5G,CAAC;IAED,uCAAQ,GAAR;QAEC,uBAAuB;QACvB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IAElC,CAAC;IAED,0CAAW,GAAX;QACC,kBAAkB;IACnB,CAAC;IAED,0CAAW,GAAX,UAAY,OAAwC;QACnD,IAAI,MAAM,GAAY,KAAK,CAAC;QAE5B,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzC,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;QACtD,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,CAAC;QAED,+BAA+B;QAC/B,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QAClC,CAAC;IACF,CAAC;IACF,2BAAC;AAAD,CA9CA,AA8CC,IAAA;AA3CS;IAAR,KAAK,EAAE;;mDAAc;AACb;IAAR,KAAK,EAAE;;sDAAkB;AAGhB;IAAT,MAAM,EAAE;;wDAA2D;AAPxD,oBAAoB;IAHhC,SAAS,CAAC;QACV,QAAQ,EAAE,mBAAmB;KAC7B,CAAC;qCAYe,UAAU;GAXd,oBAAoB,CA8ChC;SA9CY,oBAAoB","file":"matrix-chart.directive.js","sourcesContent":["import { Directive, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\nimport * as sentio from '@asymmetrik/sentio';\n\nimport { ChartWrapper } from '../util/chart-wrapper.util';\n\n\n@Directive({\n\tselector: 'sentioMatrixChart'\n})\nexport class MatrixChartDirective\n\timplements OnChanges, OnDestroy, OnInit {\n\n\t@Input() model: any[];\n\t@Input() duration: number;\n\n\t// Chart Ready event\n\t@Output() chartReady = new EventEmitter<sentio.chart.MatrixChart>();\n\n\tchartWrapper: ChartWrapper<sentio.chart.MatrixChart>;\n\n\tconstructor(el: ElementRef) {\n\n\t\t// Create the chart\n\t\tthis.chartWrapper = new ChartWrapper<sentio.chart.MatrixChart>(el, sentio.chart.matrix(), this.chartReady);\n\n\t}\n\n\tngOnInit() {\n\n\t\t// Initialize the chart\n\t\tthis.chartWrapper.initialize();\n\t\tthis.chartWrapper.chart.redraw();\n\n\t}\n\n\tngOnDestroy() {\n\t\t// Nothing for now\n\t}\n\n\tngOnChanges(changes: { [key: string]: SimpleChange }) {\n\t\tlet redraw: boolean = false;\n\n\t\tif (changes['model']) {\n\t\t\tthis.chartWrapper.chart.data(this.model);\n\t\t\tredraw = redraw || !changes['model'].isFirstChange();\n\t\t}\n\t\tif (changes['duration']) {\n\t\t\tthis.chartWrapper.chart.duration(this.duration);\n\t\t}\n\n\t\t// Only redraw once if possible\n\t\tif (redraw) {\n\t\t\tthis.chartWrapper.chart.redraw();\n\t\t}\n\t}\n}\n"]}